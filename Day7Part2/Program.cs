Console.WriteLine(new List<string[]>(){File.ReadAllLines("input.txt")}.Select(j =>j.Select(r => new{orig = r.Split(" ")[0], line = r.Split(" ")[0].Replace('A', 'Z').Replace('K', 'Y').Replace('Q', 'X').Replace('J', 'A').Replace('T','V').Replace('9', 'U').Replace('8', 'T').Replace('7', 'S').Replace('6', 'R').Replace('5', 'Q').Replace('4', 'P').Replace('3', 'O').Replace('2', 'N'), bid = int.Parse(r.Split(" ")[1])})).Select(j => j.Select(r => new{r.orig, r.line, r.bid, orderedline = r.line.OrderDescending().Aggregate("", (previous, current) => previous + current)})).Select(j => j.Select(r => new{r.orig, r.line, r.bid, repetitions = r.orderedline.Aggregate(new List<Tuple<char,int>>(){new('Z', 0), new('Y', 0), new('X', 0), new('V', 0), new('U', 0), new('T', 0), new('S', 0), new('R', 0), new('Q', 0), new('P', 0), new('O', 0), new('N', 0)} as IEnumerable<Tuple<char,int>>, (previous,current) => current == 'A' ? previous.Aggregate(new List<Tuple<char,int>>() as IEnumerable<Tuple<char,int>>, (previous1, current1) => (current1.Item1 == previous.First(c => c.Item2 == previous.Max(r => r.Item2)).Item1) ? previous1.Append(new(current1.Item1, current1.Item2 + 1)) : previous1.Append(current1)) : previous.Aggregate(new List<Tuple<char,int>>() as IEnumerable<Tuple<char,int>>, (previous1,current1) => (current1.Item1 == current) ? previous1.Append(new(current1.Item1, current1.Item2 + 1)) : previous1.Append(current1))).OrderByDescending(j => j.Item2).Aggregate("", (previous,current) => previous + current.Item2)})).First().OrderBy(j => j.repetitions).ThenBy(j => j.line).Select((j,index) => new{j.orig, j.repetitions, j.line, j.bid, index = index+1}).Sum(j => j.index * j.bid));